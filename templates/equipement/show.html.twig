{% extends 'base.html.twig' %}

{% block title %}Equipement{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1 class="text-center mb-4 text-lila">Equipement Details</h1>

        <div class="card shadow-lg border-0 rounded-3">
            <div class="card-header bg-lila text-white">
                <h5 class="card-title mb-0">Equipement Information</h5>
            </div>

            <div class="card-body">
                <table class="table table-bordered table-striped">
                    <tbody>
                        <tr>
                            <th>ID</th>
                            <td>{{ equipement.id }}</td>
                        </tr>
                        <tr>
                            <th>Nom</th>
                            <td>{{ equipement.nom }}</td>
                        </tr>
                        <tr>
                            <th>Fonctionnement</th>
                            <td>
                                {% if equipement.fonctionnement %}
                                    <span class="badge bg-success">Yes</span>
                                {% else %}
                                    <span class="badge bg-danger">No</span>
                                {% endif %}
                            </td>
                        </tr>
                        <tr>
                            <th>Prochaine Vérification</th>
                            <td>
                                {% if equipement.prochaineVerification %}
                                    <span class="badge bg-info">{{ equipement.prochaineVerification|date('Y-m-d') }}</span>
                                {% else %}
                                    <span class="text-muted">Not set</span>
                                {% endif %}
                            </td>
                        </tr>
                        <tr>
                            <th>Dernière Vérification</th>
                            <td>
                                {% if equipement.derniereVerification %}
                                    <span class="badge bg-warning">{{ equipement.derniereVerification|date('Y-m-d') }}</span>
                                {% else %}
                                    <span class="text-muted">Not set</span>
                                {% endif %}
                            </td>
                        </tr>
                    </tbody>
                </table>

                <div class="d-flex justify-content-between mt-4">
                    <a href="{{ path('app_equipement_index') }}" class="btn btn-outline-secondary btn-lg">
                        <i class="ri-arrow-left-line"></i> Back to List
                    </a>

                    <a href="{{ path('app_equipement_edit', {'id': equipement.id}) }}" class="btn btn-warning btn-lg owner-action" data-owner="{{ equipement.idUser }}" data-current-user="{{ app.user ? app.user.id : 0 }}">
                        <i class="ri-pencil-line"></i> Edit
                    </a>
                </div>
            </div>

            <div class="card-footer">
                <!-- Delete Button -->
                <div class="text-center">
                    <form method="post" action="{{ path('app_equipement_delete', {'id': equipement.id}) }}" onsubmit="return confirmDelete(this, {{ equipement.idUser }});" style="display: inline-block;">
                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ equipement.id) }}">
                        <button type="submit" class="btn owner-action" data-owner="{{ equipement.idUser }}" data-current-user="{{ app.user ? app.user.id : 0 }}">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block css %}
    <style>
        .text-lila {
            color: #6f42c1; /* Purple color for headings */
        }

        .card {
            border-radius: 12px;
            background-color: white;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .card-header {
            background-color: #6f42c1;
            color: white;
            border-radius: 12px 12px 0 0;
        }

        .card-body {
            padding: 20px;
        }

        .table {
            width: 100%;
            margin-top: 20px;
            margin-bottom: 20px;
        }

        .table-bordered th, .table-bordered td {
            border: 1px solid #ddd;
            padding: 12px;
        }

        .table-striped tbody tr:nth-of-type(odd) {
            background-color: #f9f9f9;
        }

        .btn {
            transition: background-color 0.3s ease, transform 0.3s ease;
        }

        .btn:hover {
            transform: translateY(-2px);
        }

        .btn-outline-secondary {
            color: #6f42c1;
            border-color: #6f42c1;
            border-radius: 8px;
        }

        .btn-outline-secondary:hover {
            background-color: #6f42c1;
            color: white;
        }

        .btn-warning {
            background-color: #ffc107;
            border-color: #ffc107;
            border-radius: 8px;
        }

        .btn-warning:hover {
            background-color: #e0a800;
            border-color: #e0a800;
        }

        .badge {
            font-size: 1rem;
        }

        .badge.bg-success {
            background-color: #28a745;
        }

        .badge.bg-danger {
            background-color: #dc3545;
        }

        .badge.bg-info {
            background-color: #17a2b8;
        }

        .badge.bg-warning {
            background-color: #ffc107;
        }
    </style>
{% endblock %}

{% block javascripts %}
<script>
    // Vérification propriétaire pour les boutons de modification et suppression
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.owner-action').forEach(button => {
            button.addEventListener('click', function(event) {
                const owner = parseInt(this.dataset.owner);
                const currentUser = parseInt(this.dataset.currentUser);
                
                if (currentUser !== owner) {
                    event.preventDefault();
                    alert("Vous ne pouvez pas modifier ou supprimer un équipement dont vous n'êtes pas le propriétaire.");
                }
            });
        });
    });
    
    // Fonction pour confirmer la suppression
    function confirmDelete(form, owner) {
        const currentUser = form.querySelector('.owner-action').dataset.currentUser;
        
        if (parseInt(currentUser) !== owner) {
            alert("Vous ne pouvez pas supprimer un équipement dont vous n'êtes pas le propriétaire.");
            return false;
        }
        
        return confirm('Êtes-vous sûr de vouloir supprimer cet équipement ?');
    }
</script>
{% endblock %}
